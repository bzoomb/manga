name: Manga Download and Upload (10 URLs)

on:
  workflow_dispatch:
    inputs:
      reset_index:
        description: 'Set to true to reset index to 1'
        required: false
        default: 'false'
  schedule:
    - cron: "0 1 * * *"  # Adjust the time if you want this to run at a different time than the 5-URL workflow

permissions:
  contents: write

jobs:
  download_and_upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Mangadex Downloader and Rclone
        run: |
          pip install mangadex-downloader
          sudo apt-get install -y rclone

      - name: Determine Starting Index
        id: determine_index
        run: |
          if [[ "${{ github.event.inputs.reset_index }}" == "true" ]]; then
            echo "Resetting index to 1."
            echo "1" > last_index_10.txt
          elif [[ -f last_index_10.txt ]]; then
            last_index=$(cat last_index_10.txt)
            echo "$((last_index + 10))" > last_index_10.txt
          else
            echo "1" > last_index_10.txt
          fi
          echo "Starting index: $(cat last_index_10.txt)"

      - name: Get the Next Batch of 10 URLs
        id: get_urls
        run: |
          start_index=$(cat last_index_10.txt)
          end_index=$((start_index + 9))  # Fetches 10 lines
          echo "Fetching URLs from line ${start_index} to ${end_index}."
          sed -n "${start_index},${end_index}p" manga.txt > current_batch_10.txt
          if [[ ! -s current_batch_10.txt ]]; then
            echo "No URLs found from lines ${start_index} to ${end_index}. Exiting."
            exit 0
          fi
          echo "URLs to download:"
          cat current_batch_10.txt

      - name: Download Manga in Parallel
        run: |
          # Download each URL in parallel using xargs with 10 processes
          cat current_batch.txt | xargs -n 1 -P 5 -I {} mangadex-dl {} --no-group-name -d manga -f cbz --progress-bar-layout=none -wti

      - name: Archive Manga Folder
        run: |
          timestamp=$(date +'%Y%m%d%H%M%S')
          tar -cf "${timestamp}.tar" -C manga .
          echo "Archive created: ${timestamp}.tar"

      - name: Upload to Google Drive
        env:
          RCLONE_CONFIG_DATA: ${{ secrets.RCLONE_CONFIG }}
        run: |
          echo "${RCLONE_CONFIG_DATA}" > /tmp/rclone.conf
          timestamp=$(date +'%Y%m%d%H%M%S')
          rclone --config /tmp/rclone.conf move "${timestamp}.tar" 300:manga/
          echo "Uploaded ${timestamp}.tar to Google Drive"

      - name: Send Telegram Notification
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          start_index=$(cat last_index_10.txt)
          message="Manga from index $((start_index - 9)) to ${start_index} uploaded successfully."
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" -d chat_id="${TELEGRAM_CHAT_ID}" -d text="${message}"

      - name: Commit Updated Index
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add last_index_10.txt
          git commit -m "Update last processed index for 10-URL workflow to $(cat last_index_10.txt)"
          git push "https://${GITHUB_TOKEN}@github.com/${{ github.repository }}.git" main

      - name: Check Storage
        run: |
          du -sh -- * | sort -rh
          df -h          
